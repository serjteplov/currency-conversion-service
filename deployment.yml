apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: currency-conversion-service
  name: currency-conversion-service
  namespace: micro
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: currency-conversion-service
    spec:
      restartPolicy: Always
      containers:
      - image: serjteplov/currency-conversion-service:0.0.2-SNAPSHOT
        imagePullPolicy: Always # necessary for frequent updating
        name: currency-conversion-service
        env:
# we define these variables in configmap named 'currency-conversion-service'
#          - name: SERVER_PORT
#            value: "8100"
#          - name: RABBIT_URI
#            value: amqp://guest:guest@rabbitmq:5672
          - name: SPRING_ZIPKIN_BASE_URL
            value: http://zipkin:9411
#          - name: CURRENCY_EXCHANGE_SERVICE_URI --------------- 1. instead this in app we can use CURRENCY_EXCHANGE_SERVICE_SERVICE_HOST, which kubernetes automatically injects in container
#            value: http://currency-exchange-service ----------- 2. this uri resolves through kubernetes local DNS
#          - name: SERVICE_URL_DEFAULT_ZONE
#            value: http://localhost666:666/eureka
        ports:
          - name: liveness-port
            containerPort: 8100
        readinessProbe:
          httpGet:
            path: /currency-converter/healthz
            port: liveness-port
          failureThreshold: 5
          periodSeconds: 10
          initialDelaySeconds: 50

---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: currency-conversion-service
  name: currency-conversion-service
  namespace: micro
spec:
  type: NodePort # not LoadBalancer(strict access to pod from internet), since we use ingress
  ports:
    - port: 8100
      targetPort: 8100
  selector:
    app: currency-conversion-service
  sessionAffinity: None